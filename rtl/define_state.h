`ifndef DEFINE_STATE

// for top state - we have more states than needed
typedef enum logic [2:0] {
	S_IDLE,
	S_UART_RX,
	S_M2_1,
	S_M2_2,
	S_M1_1,
	S_M1_2,
	S_VGA_1,
	S_VGA_2
} top_state_type;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

typedef enum logic [7:0] {
	LI_M1_IDLE,
	LI_M1_0,
	LI_M1_1,
	LI_M1_2,
	LI_M1_3,
	LI_M1_4,
	LI_M1_5,
	LI_M1_6,
	LI_M1_7,
	LI_M1_8,
	LI_M1_9,
	LI_M1_10,
	LI_M1_11,
	LI_M1_12,
	LI_M1_13,
	LI_M1_14,
	LI_M1_15,
	LI_M1_16,
	LI_M1_17,
	LI_M1_18,
	LI_M1_19,
	LI_M1_20,
	LI_M1_21,
	LI_M1_22,
	LI_M1_23,
	LI_M1_24,
	LI_M1_25,
	LI_M1_26,
	LI_M1_27,
	LI_M1_28,
	LI_M1_29,
	LI_M1_30,
	LI_M1_31,
	LI_M1_32,
	LI_M1_33,
	CC_S1,
	CC_S2,
	CC_S3,
	CC_S4,
	CC_S5,
	CC_S6,
	CC_S7,
	CC_S8,
	CC_S9,
	CC_S10,
	CC_S11,
	CC_S12,
	CC_S13,
	CC_S14,
	CC_S15,
	CC_S16,
	CC_S17,
	CC_S18,
	CC_S19,
	LO_CYC1_S1,
	LO_CYC1_S2,
	LO_CYC1_S3,
	LO_CYC1_S4,
	LO_CYC1_S5,
	LO_CYC1_S6,
	LO_CYC1_S7,
	LO_CYC1_S8,
	LO_CYC2_S1,
	LO_CYC2_S2,
	LO_CYC2_S3,
	LO_CYC2_S4,
	LO_CYC2_S5,
	LO_CYC2_S6,
	LO_CYC2_S7,
	LO_CYC2_S8,
	LO_CYC3_S1,
	LO_CYC3_S2,
	LO_CYC3_S3,
	LO_CYC3_S4,
	LO_CYC3_S5,
	LO_CYC3_S6,
	LO_CYC3_S7,
	LO_CYC3_S8,
	LO_CYC3_S9,
	LO_CYC3_S10,
	LO_CYC3_S11,
	LO_CYC3_S12
	
} milestone1_state_type;

typedef enum logic [7:0] {
	S_M2_IDLE,
	S_FS_1,
	S_FS_2,
	S_FS_3,
	S_FS_4,
	S_FS_5,
	S_FS_6,
	S_FS_7,
	S_FS_8,
	S_FS_9,
	S_FS_10,
	S_FS_11,
	S_FS_12,
	S_FS_13,
	S_FS_14,
	S_FS_15,
	S_FS_16,
	S_FS_17,
	S_FS_18,
	S_FS_19,
	S_CT_1,
	S_CT_2,
	S_CT_3,
	S_CT_4,
	S_CT_5,
	S_CT_6,
	S_CT_7,
	S_CSFS_1,
	S_CSFS_2,
	S_CSFS_3,
	S_CSFS_4,
	S_CSFS_5,
	S_CSFS_6,
	S_CSFS_7,
	S_CSFS_8,
	S_CSFS_9,
	S_CSFS_10,
	S_CSFS_11,
	S_CSFS_12,
	S_CSFS_13,
	S_CSFS_14,
	S_CSFS_15,
	S_CSFS_16,
	S_CSFS_17,
	S_CSFS_18,
	S_CSFS_19,
	S_CSFS_20,
	S_CSFS_21,
	S_WSCT_1,
	S_WSCT_2,
	S_WSCT_3,
	S_WSCT_4,
	S_WSCT_5,
	S_WSCT_6,
	S_WSCT_7,
	S_WSCT_8,
	S_WSCT_9,
	S_WSCT_10,
	S_WSCT_11
	
} milestone2_state_type;

parameter 
   VIEW_AREA_LEFT = 160,
   VIEW_AREA_RIGHT = 480,
   VIEW_AREA_TOP = 120,
   VIEW_AREA_BOTTOM = 360;

`define DEFINE_STATE 1
`endif
